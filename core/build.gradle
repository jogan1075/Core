apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

android {
    compileSdk 34

    defaultConfig {
        minSdkVersion 23
        versionCode 2
        versionName "2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }
}



/**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))


def getVersionName = { ->
    return "2.0.0" // Replace with version Name
}

def getArtificatId = { ->
    return "core" // Replace with library name ID
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId 'com.jmc.core'
                artifactId getArtificatId()
                version getVersionName()
                version = '2.0'
            }
        }
    }
}

dependencies {

    implementation libs.securityCryptoKtx
    implementation libs.preferenceKtx
    implementation libs.room
    annotationProcessor libs.roomCompiler


//    Network
    api libs.retrofit
    api libs.retrofitConverterGson
    implementation libs.retrofitConverterScalar
    api libs.gson
    implementation libs.okhttp
    implementation libs.okttpInterceptor
    implementation libs.timber

    implementation libs.material
    implementation libs.androidLifecycleRuntimeKtx
    implementation libs.composeRuntimeLivedata
    implementation libs.composeLifecycleViewmodel
}
